<html lang="id">
    <head>
        {{{head}}}
    </head>
    <body class="bg-slate-50">
        {{{headerHTML}}}
        <main class="below-header pt-3 pr-2 pl-3 md:px-6 md:pt-5">
            <h1>Pengaturan</h1>
            <section class="my-4">
                <h3>Akun Anda</h3>
                <section tabindex="0" id="password-setting" class="group -mx-3 my-4 flex cursor-pointer items-center justify-between rounded-md bg-violet-50 p-4 hover:bg-violet-400/20">
                    <div>
                        <h4 class="font-bold">Ganti Password Anda</h4>
                        <p class="sm-p">Ganti password admin anda saat ini!</p>
                    </div>
                    <div class="material-symbols-rounded group-hover:text-primary h-fit">arrow_forward_ios</div>
                </section>
            </section>
        </main>
        <dialog closedby="any" id="password-dialog" class="fixed m-auto rounded-md bg-white p-4 outline-0 backdrop:bg-black/35 md:w-[400px]">
            <div class="text-xl font-bold">Password</div>
            <div class="mt-2">Ubah password anda!</div>
            <div id="error-elm" class="!hidden flex gap-3 rounded-sm bg-red-200/50 p-2">
                <div class="material-symbols-rounded fill !text-red-600">warning</div>
                <p class="sm-p" id="text"></p>
            </div>
            <form id="password-form" class="mt-4 [&_input]:w-[95%] [&_label]:!text-lg">
                <label for="old-password" class="mb-1 block">Password Lama</label>
                <div class="flex items-center gap-2">
                    <input type="password" id="old-password" name="oldPassword" class="rounded-md border border-slate-300" required />
                    <div class="material-symbols-rounded show-pws">visibility</div>
                </div>
                <label for="new-password" class="mb-1 block">Password Baru</label>
                <div class="flex items-center gap-2">
                    <input type="password" id="new-password" name="newPassword" class="rounded-md border border-slate-300" required />
                    <div class="material-symbols-rounded show-pws">visibility</div>
                </div>
                <label for="confirm-password" class="mt-3 mb-1 block">Konfirmasi Password Baru</label>
                <div class="flex items-center gap-2">
                    <input type="password" id="confirm-password" class="rounded-md border border-slate-300" required />
                    <div class="material-symbols-rounded show-pws">visibility</div>
                </div>
                <div class="mt-5 mb-1.5 flex justify-end gap-4 [&>button]:block [&>button]:cursor-pointer [&>button]:select-none">
                    <button type="button" class="close-dialog hover:underline">Batal</button>
                    <button disabled type="submit" id="input-btn" class="rounded-[3px] bg-violet-500 p-1.5 text-white disabled:cursor-not-allowed disabled:opacity-70">Simpan</button>
                </div>
            </form>
        </dialog>
        <dialog id="success-dialog" class="fixed m-auto rounded-md bg-white p-4 px-8 pt-5 outline-0 backdrop:bg-black/35">
            <div class="flex flex-col items-center gap-4">
                <div class="material-symbols-rounded no-hoef rounded-full bg-green-400 p-2 !text-5xl !text-white">check</div>
                <p id="success-text">Password berhasil diubah!</p>
                <button class="close-dialog btn-primary cursor-pointer">Tutup</button>
            </div>
        </dialog>
        {{!-- prettier-ignore --}}
        <script>
            const pwDialog = document.getElementById('password-dialog');
            const successDialog = document.getElementById('success-dialog');

           const passwordSetting = document.getElementById('password-setting');

            passwordSetting.addEventListener('click', () => {
                pwDialog.showModal();
            });

            document.querySelectorAll('.close-dialog').forEach(elm => {
                elm.onclick = function() {
                    this.closest('dialog').close();
                };
            });

            document.getElementById('password-form').addEventListener('submit', async (e) => {
                e.preventDefault();
                const dataraw = await sendPassword(e.target);
                const data = await dataraw.json();
                // console.log(data)
                if (!dataraw.ok) return showError(data.msg || "Terjadi kesalahan pada Server!");
                showSuccessDialog(data.msg || "Password berhasil diubah!");
            });
            document.querySelectorAll('.show-pws').forEach(elm => {
                elm.addEventListener('click', function() {
                    const input = this.previousElementSibling;
                    if (input.type === 'password') {
                        input.type = 'text';
                        this.textContent = 'visibility_off';
                    } else {
                        input.type = 'password';
                        this.textContent = 'visibility';
                    }
                });
            });
            const oldPassword = document.getElementById('old-password');
            const newPassword = document.getElementById('new-password');
            const confirmPassword = document.getElementById('confirm-password');
            const sendBtn = document.getElementById("input-btn");
            const errorElm = document.getElementById('error-elm');
            confirmPassword.addEventListener('input', () => {
                if (newPassword.value !== confirmPassword.value) {
                    showError("Password tidak sama!");
                   sendBtn.disabled = true;
                } else {
                    hideError();
                    sendBtn.disabled = false;
                }
            });
            newPassword.addEventListener('input', () => {
                if (newPassword.value !== confirmPassword.value) {
                    console.log("Passwords do not match");
                    sendBtn.disabled = true;
                } else {
                    console.log("Passwords match");
                    sendBtn.disabled = false;
                }
            });
            function sendPassword(formElm) {
                const formData = new FormData(formElm);
                const data = Object.fromEntries(formData.entries());
                return fetch('/admin/dashboard/api/update/password', {
                    method: 'PUT',
                    body: JSON.stringify(data),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
            }
            function showSuccessDialog(message) {
                pwDialog.close();
                document.getElementById('success-text').textContent = message;
                successDialog.showModal();
            }
            function showError(message) {
                errorElm.querySelector('#text').textContent = message;
                errorElm.classList.remove('!hidden');
            }
            function hideError() {
                errorElm.classList.add('!hidden');
                errorElm.querySelector('#text').textContent = '';
            }
        </script>
        {{{aside}}}
    </body>
</html>